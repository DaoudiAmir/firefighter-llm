# Model training configuration

# Base model configuration
model:
  name: "deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B"  # Base model to fine-tune
  tokenizer: "deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B"  # Tokenizer to use
  max_length: 2048  # Maximum sequence length
  device: "cuda"  # Use GPU if available, else CPU

# Training configuration
training:
  batch_size: 1  # Very small batch size due to model size
  gradient_accumulation_steps: 16  # Increased for effective batch size
  learning_rate: 1e-5  # Lower learning rate for stability
  num_epochs: 3
  warmup_steps: 100
  weight_decay: 0.01
  optimizer: "adamw_torch"
  lr_scheduler: "cosine"
  max_grad_norm: 1.0

# LoRA configuration
lora:
  r: 8  # LoRA attention dimension
  alpha: 32  # LoRA alpha parameter
  dropout: 0.1
  target_modules: ["q_proj", "v_proj"]  # Which modules to apply LoRA to

# Data configuration
data:
  train_file: "data/training/train.jsonl"
  validation_file: "data/training/validation.jsonl"
  test_file: "data/training/test.jsonl"
  text_column: "text"
  prompt_template: "Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\n{instruction}\n\n### Input:\n{input}\n\n### Response:\n"

# Evaluation configuration
evaluation:
  eval_steps: 100  # Evaluate every N steps
  save_steps: 100  # Save checkpoint every N steps
  logging_steps: 10  # Log metrics every N steps
  metrics: ["rouge", "bleu"]  # Metrics to compute during evaluation

# Output configuration
output:
  output_dir: "models/firefighter-assistant-v1"
  logging_dir: "logs/firefighter-assistant-v1"
